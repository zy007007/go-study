package main

//给定一个整数，编写一个算法将这个数转换为十六进制数。对于负整数，我们通常使用 补码运算 方法。
//
//注意:
//
//十六进制中所有字母(a-f)都必须是小写。
//十六进制字符串中不能包含多余的前导零。如果要转化的数为0，那么以单个字符'0'来表示；对于其他情况，十六进制字符串中的第一个字符将不会是0字符。
//给定的数确保在32位有符号整数范围内。
//不能使用任何由库提供的将数字直接转换或格式化为十六进制的方法。
//示例 1：
//
//输入:
//26
//
//输出:
//"1a"
//示例 2：
//
//输入:
//-1
//
//输出:
//"ffffffff"

// 个人思路
// FormatInt(n ,16)?

import (
	"fmt"
)

// by ElliotXX
func toHex(num int) string {
	if num < 0 {
		num += 4294967296
	}

	ans := []rune{}
	hash := [26]rune{'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'}

	for num != 0 {
		t := num % 16
		num /= 16

		ans = append([]rune{hash[t]}, ans...) //头插入一个值
	}
	return ans
}

func main() {
	fmt.Println("vim-go")
}

// 收获：翻出总结的切片操作笔记，整理至思否
